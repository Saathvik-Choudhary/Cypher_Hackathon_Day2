{"ast":null,"code":"import axios from'axios';// Create axios instance with base configuration\nconst api=axios.create({baseURL:process.env.REACT_APP_API_URL||'http://localhost:8000',timeout:30000,// 30 seconds timeout for itinerary creation\nheaders:{'Content-Type':'application/json'}});// Request interceptor for logging\napi.interceptors.request.use(config=>{var _config$method;console.log(\"Making \".concat((_config$method=config.method)===null||_config$method===void 0?void 0:_config$method.toUpperCase(),\" request to \").concat(config.url));return config;},error=>{console.error('Request error:',error);return Promise.reject(error);});// Response interceptor for error handling\napi.interceptors.response.use(response=>{return response;},error=>{console.error('Response error:',error);if(error.response){var _error$response$data,_error$response$data2;// Server responded with error status\nconst message=((_error$response$data=error.response.data)===null||_error$response$data===void 0?void 0:_error$response$data.detail)||((_error$response$data2=error.response.data)===null||_error$response$data2===void 0?void 0:_error$response$data2.error_message)||'Server error occurred';throw new Error(message);}else if(error.request){// Request was made but no response received\nthrow new Error('Unable to connect to server. Please check your connection.');}else{// Something else happened\nthrow new Error('An unexpected error occurred');}});// API functions\nexport const createItinerary=async formData=>{try{const response=await api.post('/api/create-itinerary',formData);return response.data;}catch(error){console.error('Error creating itinerary:',error);throw error;}};export const getPopularDestinations=async()=>{try{const response=await api.get('/api/destinations/popular');return response.data;}catch(error){console.error('Error fetching destinations:',error);throw error;}};export const getTravelPreferences=async()=>{try{const response=await api.get('/api/preferences');return response.data;}catch(error){console.error('Error fetching preferences:',error);throw error;}};export const getBudgetCategories=async()=>{try{const response=await api.get('/api/budget-categories');return response.data;}catch(error){console.error('Error fetching budget categories:',error);throw error;}};export const getCachedItinerary=async cacheKey=>{try{const response=await api.get(\"/api/itinerary/\".concat(cacheKey));return response.data;}catch(error){console.error('Error fetching cached itinerary:',error);throw error;}};export const healthCheck=async()=>{try{const response=await api.get('/api/health');return response.data;}catch(error){console.error('Error checking health:',error);throw error;}};export default api;","map":{"version":3,"names":["axios","api","create","baseURL","process","env","REACT_APP_API_URL","timeout","headers","interceptors","request","use","config","_config$method","console","log","concat","method","toUpperCase","url","error","Promise","reject","response","_error$response$data","_error$response$data2","message","data","detail","error_message","Error","createItinerary","formData","post","getPopularDestinations","get","getTravelPreferences","getBudgetCategories","getCachedItinerary","cacheKey","healthCheck"],"sources":["/Users/saathvikchoudhary/Desktop/Cyber_Hack_Day2/frontend/src/services/api.js"],"sourcesContent":["import axios from 'axios';\n\n// Create axios instance with base configuration\nconst api = axios.create({\n  baseURL: process.env.REACT_APP_API_URL || 'http://localhost:8000',\n  timeout: 30000, // 30 seconds timeout for itinerary creation\n  headers: {\n    'Content-Type': 'application/json',\n  },\n});\n\n// Request interceptor for logging\napi.interceptors.request.use(\n  (config) => {\n    console.log(`Making ${config.method?.toUpperCase()} request to ${config.url}`);\n    return config;\n  },\n  (error) => {\n    console.error('Request error:', error);\n    return Promise.reject(error);\n  }\n);\n\n// Response interceptor for error handling\napi.interceptors.response.use(\n  (response) => {\n    return response;\n  },\n  (error) => {\n    console.error('Response error:', error);\n    \n    if (error.response) {\n      // Server responded with error status\n      const message = error.response.data?.detail || error.response.data?.error_message || 'Server error occurred';\n      throw new Error(message);\n    } else if (error.request) {\n      // Request was made but no response received\n      throw new Error('Unable to connect to server. Please check your connection.');\n    } else {\n      // Something else happened\n      throw new Error('An unexpected error occurred');\n    }\n  }\n);\n\n// API functions\nexport const createItinerary = async (formData) => {\n  try {\n    const response = await api.post('/api/create-itinerary', formData);\n    return response.data;\n  } catch (error) {\n    console.error('Error creating itinerary:', error);\n    throw error;\n  }\n};\n\nexport const getPopularDestinations = async () => {\n  try {\n    const response = await api.get('/api/destinations/popular');\n    return response.data;\n  } catch (error) {\n    console.error('Error fetching destinations:', error);\n    throw error;\n  }\n};\n\nexport const getTravelPreferences = async () => {\n  try {\n    const response = await api.get('/api/preferences');\n    return response.data;\n  } catch (error) {\n    console.error('Error fetching preferences:', error);\n    throw error;\n  }\n};\n\nexport const getBudgetCategories = async () => {\n  try {\n    const response = await api.get('/api/budget-categories');\n    return response.data;\n  } catch (error) {\n    console.error('Error fetching budget categories:', error);\n    throw error;\n  }\n};\n\nexport const getCachedItinerary = async (cacheKey) => {\n  try {\n    const response = await api.get(`/api/itinerary/${cacheKey}`);\n    return response.data;\n  } catch (error) {\n    console.error('Error fetching cached itinerary:', error);\n    throw error;\n  }\n};\n\nexport const healthCheck = async () => {\n  try {\n    const response = await api.get('/api/health');\n    return response.data;\n  } catch (error) {\n    console.error('Error checking health:', error);\n    throw error;\n  }\n};\n\nexport default api;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}